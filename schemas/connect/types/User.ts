/**
 * This file auto-generated by Fern from our API Definition.
 */

import { PhylloConnectApi } from "../../..";
import * as core from "../../../core";
import * as schemas from "../..";

export const User: core.schemas.ObjectSchema<User.Raw, PhylloConnectApi.connect.User> = core.schemas
  .object({
    externalId: core.schemas.property(
      "external_id",
      core.schemas.lazy(() => schemas.connect.ExternalId)
    ),
    createdAt: core.schemas.property("created_at", core.schemas.date()),
    updatedAt: core.schemas.property("updated_at", core.schemas.date()),
    status: core.schemas.lazy(() => schemas.connect.Status),
  })
  .extend(core.schemas.lazyObject(() => schemas.connect.UserAttribute));

export declare namespace User {
  interface Raw extends schemas.connect.UserAttribute.Raw {
    external_id: schemas.connect.ExternalId.Raw;
    created_at: string;
    updated_at: string;
    status: schemas.connect.Status.Raw;
  }
}
