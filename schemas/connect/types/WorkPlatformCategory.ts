/**
 * This file auto-generated by Fern from our API Definition.
 */

import { PhylloConnectApi } from "../../..";
import * as core from "../../../core";

export const WorkPlatformCategory: core.schemas.Schema<
  WorkPlatformCategory.Raw,
  PhylloConnectApi.connect.WorkPlatformCategory
> = core.schemas.string().transform<PhylloConnectApi.connect.WorkPlatformCategory>({
  parse: (value) => {
    switch (value) {
      case "MEDIA": {
        return PhylloConnectApi.connect.WorkPlatformCategory.Media;
      }
      case "EDUCATION": {
        return PhylloConnectApi.connect.WorkPlatformCategory.Education;
      }
      case "SOCIAL": {
        return PhylloConnectApi.connect.WorkPlatformCategory.Social;
      }
      case "ENTERTAINMENT": {
        return PhylloConnectApi.connect.WorkPlatformCategory.Entertainment;
      }
      case "LIFESTYLE": {
        return PhylloConnectApi.connect.WorkPlatformCategory.Lifestyle;
      }
      case "BUSINESS": {
        return PhylloConnectApi.connect.WorkPlatformCategory.Business;
      }
      default: {
        return {
          value: value,
          visit: (visitor) => visitor._other(value),
        };
      }
    }
  },
  json: (value) => value.value,
});

export declare namespace WorkPlatformCategory {
  type Raw = string;
}
