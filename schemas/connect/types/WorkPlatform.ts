/**
 * This file auto-generated by Fern from our API Definition.
 */

import { PhylloConnectApi } from "../../..";
import * as core from "../../../core";
import * as schemas from "../..";

export const WorkPlatform: core.schemas.ObjectSchema<WorkPlatform.Raw, PhylloConnectApi.connect.WorkPlatform> =
  core.schemas
    .object({
      createdAt: core.schemas.property("created_at", core.schemas.date()),
      updatedAt: core.schemas.property("updated_at", core.schemas.date()),
      category: core.schemas.lazy(() => schemas.connect.WorkPlatformCategory),
      status: core.schemas.lazy(() => schemas.connect.Status),
      url: core.schemas.string(),
      products: core.schemas.lazyObject(() => schemas.connect.Products),
    })
    .extend(core.schemas.lazyObject(() => schemas.connect.WorkPlatformAttribute));

export declare namespace WorkPlatform {
  interface Raw extends schemas.connect.WorkPlatformAttribute.Raw {
    created_at: string;
    updated_at: string;
    category: schemas.connect.WorkPlatformCategory.Raw;
    status: schemas.connect.Status.Raw;
    url: string;
    products: schemas.connect.Products.Raw;
  }
}
