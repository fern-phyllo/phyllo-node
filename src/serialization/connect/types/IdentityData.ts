/**
 * This file auto-generated by Fern from our API Definition.
 */

import { PhylloConnectApi } from "../../..";
import * as core from "../../../core";
import * as serializers from "../..";

export const IdentityData: core.schemas.ObjectSchema<IdentityData.Raw, PhylloConnectApi.connect.IdentityData> =
  core.schemas.object({
    status: core.schemas.lazy(() => serializers.connect.DataStatus),
    lastSyncAt: core.schemas.property("last_sync_at", core.schemas.date().optional()),
    monitorType: core.schemas.property(
      "monitor_type",
      core.schemas.lazy(() => serializers.connect.MonitoringType)
    ),
    audience: core.schemas.lazyObject(() => serializers.connect.IdentityAudienceData).optional(),
  });

export declare namespace IdentityData {
  interface Raw {
    status: serializers.connect.DataStatus.Raw;
    last_sync_at?: string | null;
    monitor_type: serializers.connect.MonitoringType.Raw;
    audience?: serializers.connect.IdentityAudienceData.Raw | null;
  }
}
