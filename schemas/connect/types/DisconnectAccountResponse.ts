/**
 * This file auto-generated by Fern from our API Definition.
 */

import { PhylloConnectApi } from "../../..";
import * as core from "../../../core";
import * as schemas from "../..";

export const DisconnectAccountResponse: core.schemas.ObjectSchema<
  DisconnectAccountResponse.Raw,
  PhylloConnectApi.connect.DisconnectAccountResponse
> = core.schemas.object({
  id: core.schemas.lazy(() => schemas.connect.AccountId),
  createdAt: core.schemas.property("created_at", core.schemas.date()),
  updatedAt: core.schemas.property("updated_at", core.schemas.date()),
  user: core.schemas.lazyObject(() => schemas.connect.UserAttribute),
  workPlatform: core.schemas.property(
    "work_platform",
    core.schemas.lazyObject(() => schemas.connect.WorkPlatformAttribute)
  ),
  status: core.schemas.lazy(() => schemas.connect.AccountStatus),
});

export declare namespace DisconnectAccountResponse {
  interface Raw {
    id: schemas.connect.AccountId.Raw;
    created_at: string;
    updated_at: string;
    user: schemas.connect.UserAttribute.Raw;
    work_platform: schemas.connect.WorkPlatformAttribute.Raw;
    status: schemas.connect.AccountStatus.Raw;
  }
}
