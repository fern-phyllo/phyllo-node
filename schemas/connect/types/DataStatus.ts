/**
 * This file auto-generated by Fern from our API Definition.
 */

import { PhylloConnectApi } from "../../..";
import * as core from "../../../core";

export const DataStatus: core.schemas.Schema<DataStatus.Raw, PhylloConnectApi.connect.DataStatus> = core.schemas
  .string()
  .transform<PhylloConnectApi.connect.DataStatus>({
    parse: (value) => {
      switch (value) {
        case "SYNCED": {
          return PhylloConnectApi.connect.DataStatus.Synced;
        }
        case "IN_PROGRESS": {
          return PhylloConnectApi.connect.DataStatus.InProgress;
        }
        case "NOT_SUPPORTED": {
          return PhylloConnectApi.connect.DataStatus.NotSupported;
        }
        case "NOT_SYNCED": {
          return PhylloConnectApi.connect.DataStatus.NotSynced;
        }
        case "PARTIAL_SYNCED": {
          return PhylloConnectApi.connect.DataStatus.PartialSynced;
        }
        default: {
          return {
            value: value,
            visit: (visitor) => visitor._other(value),
          };
        }
      }
    },
    json: (value) => value.value,
  });

export declare namespace DataStatus {
  type Raw = string;
}
