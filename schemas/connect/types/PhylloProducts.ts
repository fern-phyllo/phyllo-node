/**
 * This file auto-generated by Fern from our API Definition.
 */

import { PhylloConnectApi } from "../../..";
import * as core from "../../../core";

export const PhylloProducts: core.schemas.Schema<PhylloProducts.Raw, PhylloConnectApi.connect.PhylloProducts> =
  core.schemas.string().transform<PhylloConnectApi.connect.PhylloProducts>({
    parse: (value) => {
      switch (value) {
        case "IDENTITY": {
          return PhylloConnectApi.connect.PhylloProducts.Identity;
        }
        case "ENGAGEMENT": {
          return PhylloConnectApi.connect.PhylloProducts.Engagement;
        }
        case "INCOME": {
          return PhylloConnectApi.connect.PhylloProducts.Income;
        }
        case "ENGAGEMENT.AUDIENCE": {
          return PhylloConnectApi.connect.PhylloProducts.EngagementAudience;
        }
        case "IDENTITY.AUDIENCE": {
          return PhylloConnectApi.connect.PhylloProducts.IdentityAudience;
        }
        default: {
          return {
            value: value,
            visit: (visitor) => visitor._other(value),
          };
        }
      }
    },
    json: (value) => value.value,
  });

export declare namespace PhylloProducts {
  type Raw = string;
}
