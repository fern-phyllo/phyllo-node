/**
 * This file auto-generated by Fern from our API Definition.
 */

export interface WorkPlatformCategory<RawValue extends WorkPlatformCategory.RawValue = WorkPlatformCategory.RawValue> {
  value: RawValue;
  visit: <Result>(visitor: WorkPlatformCategory._Visitor<Result>) => Result;
}

const _Media: WorkPlatformCategory<"MEDIA"> = {
  value: "MEDIA",
  visit: (visitor) => visitor.media(),
};
const _Education: WorkPlatformCategory<"EDUCATION"> = {
  value: "EDUCATION",
  visit: (visitor) => visitor.education(),
};
const _Social: WorkPlatformCategory<"SOCIAL"> = {
  value: "SOCIAL",
  visit: (visitor) => visitor.social(),
};
const _Entertainment: WorkPlatformCategory<"ENTERTAINMENT"> = {
  value: "ENTERTAINMENT",
  visit: (visitor) => visitor.entertainment(),
};
const _Lifestyle: WorkPlatformCategory<"LIFESTYLE"> = {
  value: "LIFESTYLE",
  visit: (visitor) => visitor.lifestyle(),
};
const _Business: WorkPlatformCategory<"BUSINESS"> = {
  value: "BUSINESS",
  visit: (visitor) => visitor.business(),
};
export const WorkPlatformCategory = {
  Media: _Media,
  Education: _Education,
  Social: _Social,
  Entertainment: _Entertainment,
  Lifestyle: _Lifestyle,
  Business: _Business,
} as const;

export declare namespace WorkPlatformCategory {
  type RawValue = "MEDIA" | "EDUCATION" | "SOCIAL" | "ENTERTAINMENT" | "LIFESTYLE" | "BUSINESS" | string;

  interface _Visitor<Result> {
    media: () => Result;
    education: () => Result;
    social: () => Result;
    entertainment: () => Result;
    lifestyle: () => Result;
    business: () => Result;
    _other: (value: string) => Result;
  }
}
