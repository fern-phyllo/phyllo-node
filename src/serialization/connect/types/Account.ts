/**
 * This file auto-generated by Fern from our API Definition.
 */

import { PhylloConnectApi } from "../../..";
import * as core from "../../../core";
import * as serializers from "../..";

export const Account: core.schemas.ObjectSchema<Account.Raw, PhylloConnectApi.connect.Account> = core.schemas.object({
  id: core.schemas.lazy(() => serializers.connect.AccountId),
  createdAt: core.schemas.property("created_at", core.schemas.date()),
  updatedAt: core.schemas.property("updated_at", core.schemas.date()),
  user: core.schemas.lazyObject(() => serializers.connect.UserAttribute),
  workPlatform: core.schemas.property(
    "work_platform",
    core.schemas.lazyObject(() => serializers.connect.WorkPlatformAttribute)
  ),
  platformUsername: core.schemas.property("platform_username", core.schemas.string().optional()),
  profilePicUrl: core.schemas.property("profile_pic_url", core.schemas.string().optional()),
  status: core.schemas.lazy(() => serializers.connect.AccountStatus),
  platformProfileName: core.schemas.property("platform_profile_name", core.schemas.string().optional()),
  platformProfileId: core.schemas.property("platform_profile_id", core.schemas.string().optional()),
  platformProfilePublishedAt: core.schemas.property("platform_profile_published_at", core.schemas.date().optional()),
  data: core.schemas.lazyObject(() => serializers.connect.AccountData),
});

export declare namespace Account {
  interface Raw {
    id: serializers.connect.AccountId.Raw;
    created_at: string;
    updated_at: string;
    user: serializers.connect.UserAttribute.Raw;
    work_platform: serializers.connect.WorkPlatformAttribute.Raw;
    platform_username?: string | null;
    profile_pic_url?: string | null;
    status: serializers.connect.AccountStatus.Raw;
    platform_profile_name?: string | null;
    platform_profile_id?: string | null;
    platform_profile_published_at?: string | null;
    data: serializers.connect.AccountData.Raw;
  }
}
