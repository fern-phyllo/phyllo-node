/**
 * This file auto-generated by Fern from our API Definition.
 */

export interface AccountStatus<RawValue extends AccountStatus.RawValue = AccountStatus.RawValue> {
  value: RawValue;
  visit: <Result>(visitor: AccountStatus._Visitor<Result>) => Result;
}

const _Connected: AccountStatus<"CONNECTED"> = {
  value: "CONNECTED",
  visit: (visitor) => visitor.connected(),
};
const _NotConnected: AccountStatus<"NOT_CONNECTED"> = {
  value: "NOT_CONNECTED",
  visit: (visitor) => visitor.notConnected(),
};
const _SessionExpired: AccountStatus<"SESSION_EXPIRED"> = {
  value: "SESSION_EXPIRED",
  visit: (visitor) => visitor.sessionExpired(),
};
export const AccountStatus = {
  Connected: _Connected,
  NotConnected: _NotConnected,
  SessionExpired: _SessionExpired,
} as const;

export declare namespace AccountStatus {
  type RawValue = "CONNECTED" | "NOT_CONNECTED" | "SESSION_EXPIRED" | string;

  interface _Visitor<Result> {
    connected: () => Result;
    notConnected: () => Result;
    sessionExpired: () => Result;
    _other: (value: string) => Result;
  }
}
